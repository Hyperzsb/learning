{{template "base" .}}

{{define "Title"}}
    Virtual Terminal
{{end}}

{{define "Content"}}
    <div class="row text-center">
        <div class="col-6 offset-3">
            <h1>Virtual Terminal</h1>
            <p>This is a virtual terminal, you can make your payment here.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-6 offset-3">
            <form action="/payment" method="post" name="payment-form" id="payment-form" class="needs-validation">
                <div id="payment-success" class="alert alert-success mb-3 d-none" role="alert"></div>
                <div id="payment-error" class="alert alert-danger mb-3 d-none" role="alert"></div>
                <div class="mb-3">
                    <label for="payment-amount" class="form-label">Amount</label>
                    <input type="text" id="payment-amount" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="payment-holder-name" class="form-label">Card Holder Name</label>
                    <input type="text" id="payment-holder-name" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="payment-holder-email" class="form-label">Card Holder Email</label>
                    <input type="email" id="payment-holder-email" class="form-control" required>
                    <div id="email-help" class="form-text">We'll never share your email with anyone else.</div>
                </div>
                <div class="mb-3">
                    <label for="payment-card" class="form-label">Credit Card</label>
                    <div id="payment-card" class="form-control"></div>
                    <div id="payment-card-error" class="alert alert-danger mt-3 d-none" role="alert"></div>
                </div>
                <button type="submit" id="payment-submit" class="btn btn-primary">Submit</button>
                <div id="payment-spinner" class="text-center d-none">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </form>
        </div>
    </div>
{{end}}

{{define "JavaScript"}}
    <script src="https://js.stripe.com/v3"></script>
    <script>
        const stripe = Stripe('{{index .Data "StripeKey"}}');

        const elements = stripe.elements({
            locale: 'en'
        });

        const card = elements.create('card', {
            style: {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px'
                }
            },
            hidePostalCode: true
        });
        card.mount('#payment-card');

        card.addEventListener('change', function (event) {
            const errorMsg = document.getElementById('payment-card-error');
            if (event.error) {
                errorMsg.classList.remove('d-none');
                errorMsg.innerText = event.error.message;
            } else {
                errorMsg.classList.add('d-none');
                errorMsg.innerText = '';
            }
        });

        document.getElementById('payment-submit').addEventListener('click', function (event) {
            event.preventDefault();
            event.stopPropagation();

            const form = document.getElementById('payment-form');
            form.classList.add("was-validated");

            if (form.checkValidity() === false) {
                return;
            }

            hidePaymentSubmit();

            // Send request to the backend to get the payment intent
            const data = {
                currency: "usd",
                amount: (parseFloat(document.getElementById('payment-amount').value.toString()) * 100).toString()
            }

            fetch('http://{{.API}}/payment', {
                method: 'POST',
                mode: 'cors',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }).then(response => response.json()).then(data => {
                stripe.confirmCardPayment(data.client_secret, {
                    payment_method: {
                        card: card,
                        billing_details: {
                            name: document.getElementById("payment-holder-name").value,
                        }
                    }
                }).then(response => {
                    if (response.error) {
                        displayPaymentError(response.error.message);
                        showPaymentSubmit();
                    } else {
                        displayPaymentSuccess();
                    }
                }).catch(error => {
                    displayPaymentError('Invalid response from payment gateway');
                    showPaymentSubmit();
                })
            });
        });
    </script>
    <script>
        const paymentSubmit = document.getElementById('payment-submit');
        const paymentSpinner = document.getElementById('payment-spinner');
        const paymentSuccess = document.getElementById('payment-success');
        const paymentError = document.getElementById('payment-error');

        function showPaymentSubmit() {
            if (paymentSubmit.classList.contains('d-none')) {
                paymentSubmit.classList.remove('d-none');
            }
            if (!paymentSpinner.classList.contains('d-none')) {
                paymentSpinner.classList.add('d-none');
            }
        }

        function hidePaymentSubmit() {
            if (!paymentSubmit.classList.contains('d-none')) {
                paymentSubmit.classList.add('d-none');
            }
            if (paymentSpinner.classList.contains('d-none')) {
                paymentSpinner.classList.remove('d-none');
            }
        }

        function displayPaymentSuccess(msg = 'Payment succeeded') {
            if (!paymentError.classList.contains('d-none')) {
                paymentError.classList.add('d-none');
            }
            paymentSuccess.innerText = msg;
            if (paymentSuccess.classList.contains('d-none')) {
                paymentSuccess.classList.remove('d-none');
            }
        }

        function displayPaymentError(msg = 'Payment failed') {
            if (!paymentSuccess.classList.contains('d-none')) {
                paymentSuccess.classList.add('d-none');
            }
            paymentError.innerText = msg;
            if (paymentError.classList.contains('d-none')) {
                paymentError.classList.remove('d-none');
            }
        }
    </script>
{{end}}