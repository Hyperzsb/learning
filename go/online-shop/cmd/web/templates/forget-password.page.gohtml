{{template "base" .}}

{{define "Title"}}
    Reset Password
{{end}}

{{define "PreBodyJS"}}
{{end}}

{{define "Content"}}
    <div class="container-fluid min-vh-100">
        <div class="row my-3">
            <div class="col-6 offset-3 text-center">
                <h1 class="mb-3">Reset Password</h1>
                <p class="mt-3">
                    If you forget your password, you can reset it by entering your email.
                    If your account exists, an email containing a reset link will be sent to you.
                </p>
            </div>
        </div>
        <div class="row my-3">
            <div class="col-6 offset-3">
                <form name="reset-form" id="reset-form" class="needs-validation">
                    <div class="mb-3">
                        <label for="reset-email" class="form-label">Email</label>
                        <input type="email" name="reset-email" id="reset-email" class="form-control" required>
                    </div>

                    <div id="reset-status" class="alert mb-3 text-center d-none" role="alert"></div>

                    <div class="py-3 text-center">
                        <button type="submit" id="reset-submit" class="btn btn-primary px-3">Send Reset Email</button>
                    </div>

                    <div id="reset-spinner" class="mb-3 text-center d-none">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
{{end}}

{{define "PostBodyJS"}}
    <script>
        document.getElementById('reset-submit').addEventListener('click', function (event) {
            event.preventDefault();
            event.stopPropagation();

            const form = document.getElementById('reset-form');
            form.classList.add('was-validated');
            if (form.checkValidity() === false) {
                return;
            }

            hideResetSubmit();

            const resetRequest = {
                email: document.getElementById('reset-email').value
            };

            fetch('http://{{.API}}/reset', {
                method: 'post',
                mode: 'cors',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(resetRequest)
            }).then(response => {
                if (response.status === 200 || response.status === 400) {
                    return response.json();
                } else {
                    return new Error();
                }
            }).then(data => {
                if (data.status === 'Bad Request') {
                    displayResetError('Your email is not valid. Please check it and try again.');
                } else {
                    displayResetSuccess();
                }
            }).catch(error => {
                displayResetError('Unexpected errors occurred.');
            }).finally(() => {
                showResetSubmit();
            });
        });
    </script>
    <script>
        const resetStatus = document.getElementById('reset-status');
        const resetSubmit = document.getElementById('reset-submit');
        const resetSpinner = document.getElementById('reset-spinner');

        function hideResetSubmit() {
            if (!resetSubmit.classList.contains('d-none')) {
                resetSubmit.classList.add('d-none');
            }

            if (resetSpinner.classList.contains('d-none')) {
                resetSpinner.classList.remove('d-none');
            }
        }

        function showResetSubmit() {
            if (resetSubmit.classList.contains('d-none')) {
                resetSubmit.classList.remove('d-none');
            }

            if (!resetSpinner.classList.contains('d-none')) {
                resetSpinner.classList.add('d-none');
            }
        }

        function displayResetSuccess(msg = 'Reset email sent') {
            if (resetStatus.classList.contains('alert-danger')) {
                resetStatus.classList.remove('alert-danger');
            }

            if (!resetStatus.classList.contains('alert-success')) {
                resetStatus.classList.add('alert-success');
            }

            resetStatus.innerText = msg;

            if (resetStatus.classList.contains('d-none')) {
                resetStatus.classList.remove('d-none');
            }
        }

        function displayResetError(msg = 'Reset email not sent') {
            if (resetStatus.classList.contains('alert-success')) {
                resetStatus.classList.remove('alert-success');
            }

            if (!resetStatus.classList.contains('alert-danger')) {
                resetStatus.classList.add('alert-danger');
            }

            resetStatus.innerText = msg;

            if (resetStatus.classList.contains('d-none')) {
                resetStatus.classList.remove('d-none');
            }
        }
    </script>
{{end}}